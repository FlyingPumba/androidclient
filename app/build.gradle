plugins {
    id 'com.android.application'

/* ADDED for instrumentation begin */
id 'jacoco'
/* ADDED for instrumentation end */
            id 'checkstyle'
    id 'com.github.triplet.play' version '2.3.0'
    id 'io.fabric'
    id 'jacoco-android'
}

/* ADDED for instrumentation begin */

jacoco {
toolVersion = "0.8.2"
}

/* ADDED for instrumentation end */
    
check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    // code from Google/AOSP
    exclude 'main/java/org/kontalk/util/ThumbnailUtils.java',
        'main/java/org/kontalk/crypto/PRNGFixes.java',
        'main/java/org/kontalk/ui/AccountAuthenticatorActionBarActivity.java',
        'main/java/org/kontalk/ui/prefs/TextMessagePreference.java',
        'main/java/org/kontalk/billing/*.java',
        '*/java/org/kontalk/billing/GoogleBillingService.java',
        '*/java/org/kontalk/billing/Inventory.java',
        '*/java/org/kontalk/billing/ProductDetails.java',
        '*/java/org/kontalk/billing/Purchase.java'
    // 3rd-party code
    exclude '**/CircularSeekBar.java',
        '**/FrameLayoutFixed.java',
        '**/AbsListViewScrollDetector.java',
        '**/java/org/kontalk/client/smack/**',
        '**/ProximityScreenLocker*.java',
        '**/CustomSimpleXmppStringprep.java',
        'main/java/com/**',
        'androidTest/java/net/**'
    def configProps = ['baseDir': projectDir.absolutePath]
    configProperties configProps
    classpath = files()
}

checkstyle {
    configFile = new File(projectDir, "config/checkstyle/checkstyle.xml")
}

android {
    compileSdkVersion project.compileSdkVersion

    defaultConfig {
        applicationId project.applicationId
        versionCode project.versionCode
        versionName project.versionName
        targetSdkVersion project.targetSdkVersion
        minSdkVersion project.minSdkVersion
        resConfigs "en", "de", "fr", "it", "es", "ca", "cs", "el", "fa", "gl", "ja", "nl", "pt", "pt-rBR", "ru", "sr", "zh-rCN", "ar", "hi", "tr", "nb-rNO"
        resValue "string", "application_id", applicationId
        resValue "string", "account_type", applicationId + '.account'
        buildConfigField "String", "ACCOUNT_TYPE", '"' + applicationId + '.account"'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ eventBusIndex : 'org.kontalk.util.EventBusIndex' ]
            }
        }

        // for testing
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "TESTING", "new java.util.concurrent.atomic.AtomicBoolean(false)"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        if (travisBuild) {
            release {
                storeFile rootProject.file('dist/release.keystore')
                storePassword System.getenv("RELEASE_STORE_PASSWORD")
                keyAlias System.getenv("RELEASE_KEY_ALIAS")
                keyPassword System.getenv("RELEASE_KEY_PASSWORD")
            }
        }
        else if (project.hasProperty('RELEASE_STORE_FILE')) {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    flavorDimensions "all"

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            if (project.hasProperty('RELEASE_STORE_FILE') || travisBuild)
                signingConfig signingConfigs.release
        }
        debug {

/* ADDED test coverage enabled for instrumentation begin */
            testCoverageEnabled = true
/* ADDED test coverage enabled for instrumentation end */
            applicationIdSuffix '.debug'
            resValue "string", "application_id", defaultConfig.applicationId + '.debug'
            resValue "string", "account_type", defaultConfig.applicationId + '.debug.account'
            buildConfigField "String", "ACCOUNT_TYPE", '"' + defaultConfig.applicationId + '.debug.account"'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg', 'proguard-test.cfg'
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            testCoverageEnabled true
        }
    }

    dexOptions {
        // skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    productFlavors {
        basic {
            ext.enableCrashlytics = false
        }
        googleplay {
        }
    }

}

dependencies {
    api (project(':client-common-java')) {
        exclude group: 'net.sf.kxml'
    }

    // support libraries
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:appcompat-v7:$appcompatVersion"
    implementation "com.android.support:design:$appcompatVersion"
    implementation "com.android.support:gridlayout-v7:$appcompatVersion"
    implementation "com.android.support:exifinterface:$appcompatVersion"
    implementation "com.android.support:recyclerview-v7:$appcompatVersion"
    implementation "com.android.support:support-dynamic-animation:$appcompatVersion"
    // these are actually to override an emoji dependency
    implementation "com.android.support:cardview-v7:$appcompatVersion"
    implementation "com.android.support:animated-vector-drawable:$appcompatVersion"
    implementation "com.android.support:support-v13:$appcompatVersion"

    // network/protocol libraries
    implementation "org.igniterealtime.smack:smack-tcp:$smackVersion"
    implementation "org.igniterealtime.smack:smack-experimental:$smackVersion"
    implementation "org.igniterealtime.smack:smack-android:$smackVersion"
    implementation 'info.guardianproject.netcipher:netcipher:1.2.1'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.segment.backo:backo:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    // encryption libraries
    implementation "com.madgag.spongycastle:core:$spongyCastleVersion"
    implementation ("com.madgag.spongycastle:prov:$spongyCastleVersion") {
        exclude group: 'junit'
    }
    implementation ("com.madgag.spongycastle:bcpkix-jdk15on:$spongyCastleVersion") {
        exclude group: 'junit'
    }
    implementation ("com.madgag.spongycastle:bcpg-jdk15on:$spongyCastleVersion") {
        exclude group: 'junit'
    }

    // storage/persistence libraries
    implementation 'android.arch.persistence:db:1.1.1'
    // latest version requires AndroidX
    implementation 'io.requery:sqlite-android:3.25.2'

    // UI libraries
    implementation 'pub.devrel:easypermissions:2.0.1'
    implementation 'com.github.machinarius:preferencefragment:0.1.2'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    implementation 'com.nispok:snackbar:2.11.0'
    // TODO Glide 4 required API level 14 at the time. It needs porting now
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.daniele-athome:FloatingActionButton:2e5bbbf155'
    implementation 'com.github.vlivanov:ListViewVariants:f606578467'
    implementation 'com.vanniktech:emoji-ios:0.6.0'
    // waiting for our pull request to be accepted
    implementation 'com.github.kontalk:CircularReveal:bc59b8dfcf'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.bignerdranch.android:recyclerview-multiselect:0.2'
    implementation "android.arch.lifecycle:runtime:1.1.1"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation 'android.arch.paging:runtime:1.0.1'
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    // other libraries
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.13'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.github.instacart.truetime-android:library:3.3'
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
    // version 10 needs AndroidX
    implementation 'com.jakewharton:butterknife:9.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0'

    // maps libraries
    implementation "com.github.kontalk.AnyMaps:anymaps-base:$anyMapsVersion"
    implementation "com.github.kontalk.AnyMaps:anymaps-osm:$anyMapsVersion"
    googleplayImplementation "com.github.kontalk.AnyMaps:anymaps-google:$anyMapsVersion"

    // Google Play Services
    googleplayImplementation "com.google.android.gms:play-services-base:16.1.0"
    googleplayImplementation "com.google.android.gms:play-services-maps:16.1.0"
    googleplayImplementation "com.google.android.gms:play-services-location:16.0.0"
    googleplayImplementation 'com.google.firebase:firebase-core:16.0.9'
    googleplayImplementation 'com.google.firebase:firebase-messaging:18.0.0'
    googleplayImplementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    // test dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.google.android:android-test:4.1.1.4'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "com.android.support:support-annotations:$appcompatVersion"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation 'com.android.support.test:monitor:1.0.2'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
}

if (travisBuild) {
    play {
        track = 'beta'
        releaseStatus = 'completed'
        serviceAccountCredentials = rootProject.file('dist/googleplay-developer-key.json')
    }

    task publishBeta(dependsOn: ['publishGoogleplayRelease']) {
        group = 'Kontalk'
        description = 'Publish to Google Play beta channel'
    }
    publishBeta.dependsOn 'testGoogleplayReleaseUnitTest'
}
else {
    play {
        track = 'alpha'
        releaseStatus = 'draft'
        serviceAccountCredentials = rootProject.file('dist/googleplay-developer-key.json')
    }
}

apply plugin: 'com.google.gms.google-services'

googleServices {
    // temporary workaround for Smack dependency problem
    disableVersionCheck = true
}
